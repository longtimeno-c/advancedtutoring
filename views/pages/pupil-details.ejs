<%- include('../partials/header') %>

<section class="pupil-details-section">
  <div class="container">
    <div class="section-header">
      <h1 class="section-title">Pupil Details</h1>
      <a href="/tutor/pupils" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Back to Pupils
      </a>
    </div>

    <!-- Loading state -->
    <div id="pupil-loading" class="loading-container">
      <p>Loading pupil details...</p>
    </div>

    <!-- Error state -->
    <div id="pupil-error" class="error-container" style="display: none;">
      <p>Error loading pupil details. Please try again later.</p>
    </div>

    <!-- Pupil Details -->
    <div id="pupil-details" class="pupil-details" style="display: none;">
      <div class="pupil-info-card">
        <div class="pupil-header">
          <div class="pupil-avatar">
            <img id="pupil-profile-picture" src="/images/default-avatar.png" alt="Profile Picture">
          </div>
          <div class="pupil-basic-info">
            <h2 id="pupil-name">Loading...</h2>
            <p id="pupil-email" class="pupil-email">Loading...</p>
            <p class="pupil-status">
              Status: <span id="pupil-verification-status">Loading...</span>
            </p>
          </div>
        </div>
        <div class="pupil-bio">
          <h3>About</h3>
          <p id="pupil-bio">Loading...</p>
        </div>
      </div>

      <!-- Quick Actions -->
      <div class="quick-actions">
        <a id="message-pupil" href="#" class="btn btn-primary">
          <i class="fas fa-comment"></i> Message Pupil
        </a>
      </div>

      <!-- Notes Section -->
      <div class="notes-section">
        <div class="notes-header">
          <h3>Notes</h3>
          <button id="add-note-btn" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add Note
          </button>
        </div>

        <!-- Add/Edit Note Form -->
        <div id="note-form" class="note-form" style="display: none;">
          <textarea id="note-content" placeholder="Enter your note here..."></textarea>
          <div class="note-form-actions">
            <button id="save-note-btn" class="btn btn-primary">Save Note</button>
            <button id="cancel-note-btn" class="btn btn-secondary">Cancel</button>
          </div>
        </div>

        <!-- Notes List -->
        <div id="notes-list" class="notes-list">
          <!-- Notes will be loaded here -->
        </div>
      </div>
    </div>
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', async () => {
  // Check authentication
  const token = localStorage.getItem('token');
  const user = JSON.parse(localStorage.getItem('user') || 'null');
  
  if (!token || !user) {
    window.location.href = '/login';
    return;
  }

  // Get pupil ID from URL
  const pupilId = window.location.pathname.split('/').pop();
  
  // Elements
  const loadingEl = document.getElementById('pupil-loading');
  const errorEl = document.getElementById('pupil-error');
  const detailsEl = document.getElementById('pupil-details');
  const noteFormEl = document.getElementById('note-form');
  const noteContentEl = document.getElementById('note-content');
  const notesListEl = document.getElementById('notes-list');
  
  // Buttons
  const addNoteBtn = document.getElementById('add-note-btn');
  const saveNoteBtn = document.getElementById('save-note-btn');
  const cancelNoteBtn = document.getElementById('cancel-note-btn');
  
  let currentPupil = null;
  let editingNoteId = null;

  try {
    // Fetch pupil details
    const response = await fetch(`/api/users/${pupilId}`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    
    if (!response.ok) {
      throw new Error('Failed to load pupil details');
    }
    
    const data = await response.json();
    currentPupil = data.user;
    
    // Update UI with pupil details
    document.getElementById('pupil-name').textContent = `${currentPupil.firstName} ${currentPupil.lastName}`;
    document.getElementById('pupil-email').textContent = currentPupil.email;
    document.getElementById('pupil-verification-status').textContent = currentPupil.verified ? 'Verified' : 'Pending Verification';
    document.getElementById('message-pupil').href = `/messages/conversation/${currentPupil.id}`;
    
    // Update profile picture and bio
    if (currentPupil.profilePicture) {
      document.getElementById('pupil-profile-picture').src = currentPupil.profilePicture;
    }
    document.getElementById('pupil-bio').textContent = currentPupil.bio || 'No bio added yet.';
    
    // Hide loading, show details
    loadingEl.style.display = 'none';
    detailsEl.style.display = 'block';
    
    // Load notes
    await loadNotes();
  } catch (error) {
    console.error('Pupil details error:', error);
    loadingEl.style.display = 'none';
    errorEl.style.display = 'block';
  }

  // Load notes function
  async function loadNotes() {
    try {
      const response = await fetch(`/api/notes/pupil/${pupilId}`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      if (!response.ok) {
        throw new Error('Failed to load notes');
      }
      
      const data = await response.json();
      const notes = data.notes || [];
      
      if (notes.length === 0) {
        notesListEl.innerHTML = '<p class="no-notes">No notes yet. Add your first note!</p>';
      } else {
        notesListEl.innerHTML = notes.map(note => `
          <div class="note-card" data-note-id="${note.id}">
            <div class="note-content">${note.content}</div>
            <div class="note-meta">
              <span class="note-date">${new Date(note.createdAt).toLocaleString()}</span>
              <div class="note-actions">
                <button class="btn-icon edit-note" title="Edit Note">
                  <i class="fas fa-edit"></i>
                </button>
                <button class="btn-icon delete-note" title="Delete Note">
                  <i class="fas fa-trash"></i>
                </button>
              </div>
            </div>
          </div>
        `).join('');
        
        // Add event listeners to edit/delete buttons
        document.querySelectorAll('.edit-note').forEach(btn => {
          btn.addEventListener('click', (e) => {
            const noteCard = e.target.closest('.note-card');
            const noteId = noteCard.dataset.noteId;
            const noteContent = noteCard.querySelector('.note-content').textContent;
            editingNoteId = noteId;
            noteContentEl.value = noteContent;
            noteFormEl.style.display = 'block';
            noteContentEl.focus();
          });
        });
        
        document.querySelectorAll('.delete-note').forEach(btn => {
          btn.addEventListener('click', async (e) => {
            if (!confirm('Are you sure you want to delete this note?')) return;
            
            const noteCard = e.target.closest('.note-card');
            const noteId = noteCard.dataset.noteId;
            
            try {
              const response = await fetch(`/api/notes/${noteId}`, {
                method: 'DELETE',
                headers: {
                  'Authorization': `Bearer ${token}`
                }
              });
              
              if (!response.ok) {
                throw new Error('Failed to delete note');
              }
              
              await loadNotes(); // Reload notes after deletion
            } catch (error) {
              console.error('Delete note error:', error);
              alert('Failed to delete note. Please try again.');
            }
          });
        });
      }
    } catch (error) {
      console.error('Load notes error:', error);
      notesListEl.innerHTML = '<p class="error-message">Failed to load notes. Please try again.</p>';
    }
  }

  // Add note button click
  addNoteBtn.addEventListener('click', () => {
    editingNoteId = null;
    noteContentEl.value = '';
    noteFormEl.style.display = 'block';
    noteContentEl.focus();
  });

  // Save note button click
  saveNoteBtn.addEventListener('click', async () => {
    const content = noteContentEl.value.trim();
    if (!content) return;
    
    try {
      const url = editingNoteId ? 
        `/api/notes/${editingNoteId}` : 
        `/api/notes/pupil/${pupilId}`;
      
      const method = editingNoteId ? 'PUT' : 'POST';
      
      const response = await fetch(url, {
        method,
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ content })
      });
      
      if (!response.ok) {
        throw new Error(`Failed to ${editingNoteId ? 'update' : 'create'} note`);
      }
      
      noteFormEl.style.display = 'none';
      await loadNotes(); // Reload notes after save
    } catch (error) {
      console.error('Save note error:', error);
      alert('Failed to save note. Please try again.');
    }
  });

  // Cancel note button click
  cancelNoteBtn.addEventListener('click', () => {
    noteFormEl.style.display = 'none';
    editingNoteId = null;
    noteContentEl.value = '';
  });
});
</script>

<style>
.pupil-details-section {
  padding: 2rem 0;
}

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}

.pupil-info-card {
  background: var(--bg-color);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  padding: 1.5rem;
  margin-bottom: 2rem;
}

.pupil-header {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.pupil-avatar {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  overflow: hidden;
}

.pupil-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.pupil-basic-info h2 {
  margin: 0;
  margin-bottom: 0.5rem;
}

.pupil-email {
  color: #666;
  margin: 0;
  margin-bottom: 0.5rem;
}

.quick-actions {
  margin-bottom: 2rem;
}

.notes-section {
  background: var(--bg-color);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  padding: 1.5rem;
}

.notes-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.notes-header h3 {
  margin: 0;
}

.note-form {
  margin-bottom: 1.5rem;
}

.note-form textarea {
  width: 100%;
  min-height: 100px;
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  margin-bottom: 1rem;
  font-family: inherit;
}

.note-form-actions {
  display: flex;
  gap: 1rem;
}

.notes-list {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.note-card {
  background: var(--light-bg);
  border-radius: var(--border-radius);
  padding: 1rem;
}

.note-content {
  margin-bottom: 0.75rem;
  white-space: pre-wrap;
}

.note-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.875rem;
  color: #666;
}

.note-actions {
  display: flex;
  gap: 0.5rem;
}

.btn-icon {
  background: none;
  border: none;
  color: #666;
  cursor: pointer;
  padding: 0.25rem;
}

.btn-icon:hover {
  color: var(--primary-color);
}

.no-notes {
  text-align: center;
  color: #666;
  padding: 2rem;
}

.error-message {
  color: var(--accent-color);
  text-align: center;
  padding: 1rem;
}

.pupil-bio {
  margin-top: 1.5rem;
  padding-top: 1.5rem;
  border-top: 1px solid var(--border-color);
}

.pupil-bio h3 {
  margin: 0;
  margin-bottom: 1rem;
  font-size: 1.1rem;
}

.pupil-bio p {
  margin: 0;
  color: #666;
  line-height: 1.5;
}
</style>

<%- include('../partials/footer') %> 